<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.applications.mapper.UserMapper">

    <resultMap type="com.example.demo.applications.entity.UserEntity" id="userMap">
        <id property="id" column="id" jdbcType="NUMERIC"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="status" column="status"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <!-- 		column:对应的列名		property:对应的属性名	 -->
        <association property="organization" javaType="com.example.demo.applications.entity.OrganizationEntity">
            <id property="id" column="org_id" jdbcType="NUMERIC"/>
            <result property="name" column="org_name" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <select id="getByUsername" resultType="com.example.demo.applications.entity.UserEntity">
        SELECT t.*
        FROM cm_employee t
        WHERE  username = #{0}
    </select>

    <select id="get" resultType="com.example.demo.applications.entity.UserEntity">
        SELECT t.*
        FROM cm_employee t
        WHERE id = #{id}
    </select>

    <insert id="add" parameterType="com.example.demo.applications.entity.UserEntity">
        insert into cm_employee (username, password
        <if test="organization != null">,org_id</if>
        , name, phone, status, creator_id, create_time, modifier_id, modify_time)
        values(#{username},#{password}
        <if test="organization != null">,#{organization.id}</if>
        ,#{name},#{phone},#{status},#{currentUser.id},now(),#{currentUser.id},now())
    </insert>

    <select id="list" resultType="com.example.demo.applications.entity.UserEntity">
        SELECT t.*
        FROM cm_employee t where status!=2
    </select>

    <select id="page" resultMap="userMap" parameterType="com.example.demo.plugins.model.page.PageParameter">
        select e.*,d.name org_name,d.id org_id from cm_employee e left join cm_organization d on
        e.org_id=d.id where e.status!=2
        <if test="username != null and username != ''">
            and e.username=#{username}
        </if>
        <if test="name != null and name != ''">
            and e.name =#{name}
        </if>

    </select>

    <update id="mod" parameterType="com.example.demo.applications.entity.UserEntity">
        UPDATE cm_employee
        SET
            modify_time=now()
            <if test="password!= null">,password = #{password}</if>
            <if test="name!= null">,name = #{name}</if>
            <if test="phone!= null">,phone = #{phone}</if>
            <if test="email!= null">,email = #{email}</if>
            <if test="status!= null">,status = #{status}</if>
        WHERE id = #{id}
    </update>


    <update id="changeStatus">
        UPDATE cm_employee
        SET status = #{status}
        WHERE id = #{id}
    </update>

    <insert id="addRoles" parameterType="com.example.demo.applications.entity.UserEntity">
        insert into cm_employee_role (employee_id, role_id) values
            <foreach collection="roles" separator="," item="role">
                (#{id},#{role})
            </foreach>
    </insert>

    <delete id="delRoles" parameterType="com.example.demo.applications.entity.UserEntity">
        delete from cm_employee_role where employee_id=#{id}
    </delete>

    <select id="getRoles" parameterType="com.example.demo.applications.entity.UserEntity" resultType="java.math.BigDecimal">
        select role_id from cm_employee_role where employee_id=#{id}
    </select>
</mapper>
